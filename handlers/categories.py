# from aiogram import Router
# from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
# from database import crud

# router = Router()

# def main_menu_keyboard():
#     cats = crud.get_categories()
#     cat_map = {
#         "üõã –ú—è–≥–∫–∞—è –º–µ–±–µ–ª—å": "–º—è–≥–∫–∞—è",
#         "üç≥ –ö—É—Ö–æ–Ω–Ω–∞—è –º–µ–±–µ–ª—å": "–∫—É—Ö–æ–Ω–Ω–∞—è",
#         "üõè –°–ø–∞–ª—å–Ω–∞—è –º–µ–±–µ–ª—å": "—Å–ø–∞–ª—å–Ω–∞—è",
#         "üìö –°—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è": "—Å—Ç–æ–ª—ã",
#         "üì∫ –¢—É–º–±—ã –∏ –∫–æ–º–æ–¥—ã": "—Ç—É–º–±—ã",
#         "üõè –ú–∞—Ç—Ä–∞—Å—ã": "–º–∞—Ç—Ä–∞—Å—ã",
#         "üö™ –®–∫–∞—Ñ—ã": "—à–∫–∞—Ñ—ã"
#     }
#     buttons = [
#         [InlineKeyboardButton(text=cat['name'], callback_data=f"cat:{cat_map.get(cat['name'], cat['id'])}")]
#          for cat in cats
#     ]
#     buttons.append([InlineKeyboardButton(text="‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏ / –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="cat:about")])
#     return InlineKeyboardMarkup(inline_keyboard=buttons)

# def subcategories_keyboard(category_key, subcats):
#     buttons = [
#         [InlineKeyboardButton(text=subcat, callback_data=f"subcat:{category_key}:{subcat.lower()}")] 
#         for subcat in subcats
#     ]
#     buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")])
#     return InlineKeyboardMarkup(inline_keyboard=buttons)

# @router.callback_query(lambda c: c.data and c.data.startswith("cat:"))
# async def process_category_callback(callback_query: CallbackQuery):
#     category_key = callback_query.data.split(":")[1]
#     if category_key == "about":
#         await callback_query.message.edit_text("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∑–¥–µ—Å—å.")
#     else:
#         subcats = crud.get_subcategories(category_key)
#         if not subcats:
#             # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä—ã –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç
#             await callback_query.answer("–¢–æ–≤–∞—Ä—ã –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
#         else:
#             keyboard = subcategories_keyboard(category_key, subcats)
#             await callback_query.message.edit_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è {category_key}:", reply_markup=keyboard)
#     await callback_query.answer()

# @router.callback_query(lambda c: c.data == "back_to_main")
# async def process_back_to_main(callback_query: CallbackQuery):
#     keyboard = main_menu_keyboard()
#     await callback_query.message.edit_text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ–±–µ–ª–∏:", reply_markup=keyboard)
#     await callback_query.answer()
